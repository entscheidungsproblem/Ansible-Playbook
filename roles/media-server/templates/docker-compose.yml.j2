---
version: '2'
services:
  sonarr:
    image:  linuxserver/sonarr
    container_name: sonarr
    depends_on:
      - jackett
    links:
      - jackett
    volumes:
      - "{{ storage }}"/config/sonarr:/config
      - "{{ storage }}"/tv:/tv
      - "{{ storage }}"/downloads/complete/tv:/downloads
      - /etc/localtime:/etc/localtime:ro
    # - "{{ storage }}"/downloads/complete/tv_import:/tv_import
    ports:
      - "{{ sonarr_port }}":8989
    environment:
      - PUID=${PUID}
      - PGID=${PGID
      - TZ=${TZ}  
    restart:  always
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sonarr"
      - "traefik.frontend.rule=Host:sonarr.${DOMAIN_NAME}"
      - "traefik.port=8989"
      - "traefik.docker.network=web"

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    volumes:
      - "{{ storage }}"/config/radarr:/config
      - "{{ storage }}"/movies:/movies
      - "{{ storage }}"/downloads/complete/movies:/downloads
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "{{ radarr_port }}":7878
    environment:
      - PUID=${PUID}
      - PGID=${PGID
      - TZ=${TZ}  
    restart:  always
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.backend=radarr"
      - "traefik.frontend.rule=Host:radarr.${DOMAIN_NAME}"
      - "traefik.port=7878"
      - "traefik.docker.network=web"

  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    volumes:
      - "{{ storage }}"/config/lidarr:/config
      - "{{ storage }}"/music:/music
      - "{{ storage }}"/downloads/complete/music:/downloads
    ports:
      - "{{ lidarr_port }}":7879
    environment:
      - PUID=${PUID}
      - PGID=${PGID
    restart:  always
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.backend=lidarr"
      - "traefik.frontend.rule=Host:lidarr.${DOMAIN_NAME}"
      - "traefik.port=7878"
      - "traefik.docker.network=web"

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    volumes:
      - "{{ storage }}"/jackett/config:/config
      - "{{ storage }}"/jackett/downloads:/downloads
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "{{ jackett_port }}":9117
    environment:
      - PUID=${PUID}
      - PGID=${PGID
      - TZ=${TZ}  
    restart:  always
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.backend=jackett"
      - "traefik.frontend.rule=Host:jackett.${DOMAIN_NAME}"
      - "traefik.port=9117"
      - "traefik.docker.network=web"

  transmission:
    image: linuxserver/transmission
    container_name: transmission
    network_mode: host
    volumes:
      - "{{ storage }}"/config/transmission:/config
      - "{{ storage }}"/downloads:/downloads
    ports:
        - 9091:9091
        - 51413:51413
        - 51413:51413/udp
    environment:
      - PUID=${PUID}
      - PGID=${PGID
    restart: always
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.backend=transmission"
      - "traefik.frontend.rule=Host:transmission.${DOMAIN_NAME}"
      - "traefik.port=9091"
      - "traefik.docker.network=web"

  deluge:
    image: linuxserver/deluge
    container_name: deluge
    network_mode: host
    volumes:
      - "{{ storage }}"/config/deluge:/config
      - "{{ storage }}"/downloads:/downloads
    environment:
      - PUID=${PUID}
      - PGID=${PGID
      - UMASK_SET=<022>
    restart: always
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.backend=deluge"
      - "traefik.frontend.rule=Host:deluge.${DOMAIN_NAME}"
      - "traefik.port=9091"
      - "traefik.docker.network=web"

  ombi:
    container_name: ombi
    image: linuxserver/ombi
    volumes:
      - "{{ storage }}"/config/ombi:/config
  #    - ${USERDIR}/docker/certs:/certs
    ports:
      - "{{ ombi_port }}":3579
    environment:
      - PUID=${PUID}
      - PGID=${PGID
      - TZ=${TZ}   
    restart: always
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.backend=ombi"
      - "traefik.frontend.rule=Host:ombi.${DOMAIN_NAME}"
      - "traefik.port=3579"
      - "traefik.docker.network=web"

  heimdall:
    container_name: heimdall
    image: linuxserver/heimdall
    volumes:
      - "{{ storage }}"/config/heimdall:/config
    ports:
      - 80:80
      - 443:443
    environment:
      - PUID=${PUID}
      - PGID=${PGID
      - TZ=${TZ}   
    networks:
      - web
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.backend=heimdall"
      - "traefik.frontend.rule=Host:heimdall.${DOMAIN_NAME}"
      - "traefik.port=443"
      - "traefik.docker.network=web"

  tautulli:
    container_name: tautulli
    image: linuxserver/tautulli
    volumes:
      - "{{ storage }}"/config/tautulli:/config
      - "{{ storage }}"/logs/tautulli:/logs:ro
    ports:
      - "{{ tautulli_port }}":8181
    environment:
      - PUID=${PUID}
      - PGID=${PGID
      - TZ=${TZ}  
    networks:
      - web
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.backend=tautulli"
      - "traefik.frontend.rule=Host:tautulli.${DOMAIN_NAME}"
      - "traefik.port=8181"
      - "traefik.docker.network=web"

  plex:
    container_name: plex
    image: plexinc/pms-docker
    volumes:
      - "{{ storage }}"/config/plex:/config
      - "{{ storage }}"/config/plex-transcode:/transcode
      - "{{ storage }}"/movies:/data/movies
      - "{{ storage }}"/tv:/data/tv
      - "{{ storage }}"/music:/data/music
    environment:
      - TZ=${TZ}
      - PLEX_CLAIM= "{{ plex_token }}"
    #network_mode: host  
    networks:
      - web
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.backend=plex"
      - "traefik.docker.network=web"
      - "traefik.frontend.rule=Host:plex.${DOMAIN_NAME}"
      - "traefik.port=32400"

  watchtower:
    image: v2tec/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 21600
    networks:
      - web
    tlsverify: true
    restart: always

# --docker.domain=docker.localhost
  proxy:
    image: traefik
    command: --web --api --docker 
    # --docker.domain="{{ domain }}" --acme.email="{{ email }}" --logLevel=DEBUG
    networks:
      - web
    ports:
      - 80:80
      - 8080:8080
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/traefik/traefik.toml:/traefik.toml
      - /opt/traefik/acme.json:/acme.json
    restart: always

networks:
  web:
    external: true